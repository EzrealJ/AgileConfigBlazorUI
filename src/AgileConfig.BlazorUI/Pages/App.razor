@page "/app"
@using System.ComponentModel;
@using AgileConfig.BlazorUI.Components
@using AgileConfig.BlazorUI.Components.App
@using AgileConfig.BlazorUI.Enums
@using AgileConfig.UIApiClient;
@using AgileConfig.UIApiClient.HttpResults
@using AntDesign.TableModels;
@using AntDesign;
@using AgileConfig.BlazorUI.Components.Node;
@using Microsoft.AspNetCore.Components.Rendering
@using Consts;





<Form Layout=@FormLayout.Inline Model=@_formClass>
    <FormItem Label="名称">
        <Input @bind-Value=@context.Name />
    </FormItem>
    <FormItem Label="应用Id">
        <Input @bind-Value="@context.Id" />
    </FormItem>
    <FormItem Label="应用组">
        @*<Input @bind-Value="@context.Group" />*@
        @*<AutoComplete @bind-Value="@context.Group" Options="@_options" Placeholder="点击选择分组"/>*@
        <Select DataSource="@_options"
                @bind-Value="@context.Group"
                Placeholder="点击选择分组"
                DefaultActiveFirstOption="false">
        </Select>
    </FormItem>
    <FormItem>
        <Space>
            <SpaceItem><Button Type="@ButtonType.Default" OnClick=@ReSet>重置</Button></SpaceItem>
            <SpaceItem><Button Type="@ButtonType.Primary" OnClick=@SearchAsync>搜索</Button></SpaceItem>
        </Space>
    </FormItem>
</Form>
<Divider />
<Space>
    <SpaceItem>
        <Button Type="@ButtonType.Primary" OnClick=@AddAsync>新建</Button>
    </SpaceItem>
    <SpaceItem>
        <Checkbox @bind-Checked="_formClass.TableGrouped">分组聚合</Checkbox>
    </SpaceItem>

</Space>
<Divider />
<Table TItem="AppListVM" DataSource="@_dataSource.Data"
       @bind-PageIndex="_dataSource.Current"
       @bind-PageSize="_dataSource.PageSize"
       Total="_dataSource.Total"
       Loading="_loading" OnChange="@HandleTableChange"
       RemoteDataSource
       TreeChildren="item=>item.Children">
    <AntDesign.Column Title="名称" DataIndex="@nameof(context.Name)"
                      TData="string"
                      Sortable
                      DefaultSortOrder="SortDirection.Ascending"
                      SortDirections=@SortDirection.Preset.TwoWay />
    <AntDesign.Column Title="应用Id" DataIndex="@nameof(context.Id)" TData="string"
                      Sortable
                      DefaultSortOrder="SortDirection.Ascending"
                      SortDirections=@SortDirection.Preset.TwoWay>
        <Paragraph Copyable>@context.Id</Paragraph>
    </AntDesign.Column>
    <AntDesign.Column Title="密钥" DataIndex="@nameof(context.Secret)" TData="string">
        @*<CopyableInputPassword @bind-Value="@context.Secret" Copyable Bordered=false ReadOnly CopyConfig=@(new TypographyCopyableConfig{Text=context.Secret}) />*@
        <PasswordText CopyConfig=@(new TypographyCopyableConfig{Text=context.Secret}) Copyable VisibilityToggle></PasswordText>

    </AntDesign.Column>
    <AntDesign.Column Title="应用组" DataIndex="@nameof(context.Group)" TData="string"
                      Sortable
                      DefaultSortOrder="SortDirection.Ascending"
                      SortDirections=@SortDirection.Preset.TwoWay />
    <AntDesign.Column Title="创建时间"
                      DataIndex="@nameof(context.CreateTime)"
                      TData="Nullable<DateTimeOffset>"
                      Format=@Format.DATE_TIME_YYYY_MM_DD_HH_MM_SS
                      Sortable
                      DefaultSortOrder="SortDirection.Descending"
                      SortDirections=@SortDirection.Preset.TwoWay />
    <AntDesign.Column Title="管理员" DataIndex="@nameof(context.AppAdminName)" TData="string" />
    <AntDesign.Column Title="公共" TData="bool">
        @GetPublicTag(context)
    </AntDesign.Column>
    <AntDesign.Column Title="关联" DataIndex="@nameof(context.InheritancedAppNames)" TData="List<string>">
        @GetInheritancedAppNames(context)
    </AntDesign.Column>

    <AntDesign.ActionColumn Title="操作">
        <Space>

            <AuthorizedElement AppId="@context.Id" JudgeKey="@JudgeKey.APP_EDIT">
                <Children>
                    <SpaceItem>
                        <Switch Checked="context.Enabled" CheckedChildren="启用" UnCheckedChildren="禁用" OnChange=@(async e=>await EnabledOrDisableAsync(context.Id)) />
                    </SpaceItem>
                </Children>
                <NoMatch>
                    <SpaceItem>
                        <Switch Checked="context.Enabled" CheckedChildren="启用" UnCheckedChildren="禁用" />
                    </SpaceItem>
                </NoMatch>
            </AuthorizedElement>
            <SpaceItem><Button Type=@ButtonType.Default Size=@AntSizeLDSType.Small OnClick=@(e=>ConfigList(context))>配置项</Button></SpaceItem>
            <AuthorizedElement AppId="@context.Id" JudgeKey="@JudgeKey.APP_EDIT">
                <Children>
                    <SpaceItem>
                        <Button Type=@ButtonType.Primary Size=@AntSizeLDSType.Small OnClick=@(e=>EditAsync(context))>编辑</Button>
                    </SpaceItem>
                </Children>
            </AuthorizedElement>


            <AuthorizedElement AppId="@context.Id" JudgeKey="@JudgeKey.APP_AUTH">
                <Children>
                    <SpaceItem>
                        <Button Type=@ButtonType.Primary Size=@AntSizeLDSType.Small OnClick=@(e=>AuthAsync(context))>授权</Button>
                    </SpaceItem>
                </Children>
            </AuthorizedElement>


            <AuthorizedElement AppId="@context.Id" JudgeKey="@JudgeKey.APP_DELETE">
                <Children>
                    <SpaceItem>
                        <Button Type=@ButtonType.Primary Size=@AntSizeLDSType.Small Danger OnClick=@(e=>DeleteConfirm(context))>删除</Button>
                    </SpaceItem>
                </Children>
            </AuthorizedElement>

        </Space>
    </AntDesign.ActionColumn>
</Table>

<EditApp @ref=@_editApp EditType=@_enumEditType CurrentObject=@_editObj OnCompleted=@SearchAsync></EditApp>
<AuthApp @ref=@_authApp AppId=@_authObj.Id AppName=@_authObj.Name OnCompleted=@SearchAsync></AuthApp>
@code {
    RenderFragment infoIcon =@<Icon Type="exclamation-circle" Theme="outline" />
    ;




    RenderFragment GetInheritancedAppNames(AppListVM app)
    => (RenderFragment)(
    @<Space>
        @foreach (string name in app.InheritancedAppNames)
        {
                <Tag>@name</Tag>
        }
        </Space>
    );

    RenderFragment GetPublicTag(AppListVM app)
    {
        if (app.Inheritanced)
        {
            return (RenderFragment)(
    @<Tag Color="green-inverse">公开</Tag>
    );
        }
        else
        {
            return (RenderFragment)(
    @<Tag Color="purple">私有</Tag>
    );
        }
    }
}
