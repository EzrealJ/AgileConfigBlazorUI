@page "/node"
@using System.ComponentModel;
@using AgileConfig.BlazorUI.Components
@using AgileConfig.BlazorUI.Consts
@using AgileConfig.BlazorUI.Enums
@using AgileConfig.UIApiClient;
@using AntDesign.TableModels;
@using AntDesign;
@using AgileConfig.BlazorUI.Components.Node;
@using Microsoft.AspNetCore.Components.Rendering


<Row>
    <Col>
    <Button Type="@ButtonType.Primary" OnClick="ChangeShowType">@ShowTypeString</Button>
    <Button Type="@ButtonType.Primary" Loading="_dataLoading" OnClick="LoadAllAsync">重新加载</Button>
    <AuthorizedElement JudgeKey="@JudgeKey.NODE_ADD">
        <Children>
            <Button Type="@ButtonType.Primary" OnClick="@(()=>_editNode.Visible=true)">添加节点</Button>
        </Children>
    </AuthorizedElement>
    </Col>
</Row>
<Divider />
@if (_itemShowType == EnumItemShowType.TableRow)
{
    <Table TItem="ServerNodeVM" DataSource="@DataSource">
        <AntDesign.Column Title="节点地址"
                      DataIndex="@nameof(context.Address)"
                      TData="string" />
        <AntDesign.Column Title="备注" DataIndex="@nameof(context.Remark)" TData="string"></AntDesign.Column>
        <AntDesign.Column Title="最后响应时间"
                      DataIndex="@nameof(context.LastEchoTime)"
                      TData="Nullable<DateTimeOffset>"
                      Format=@Consts.Format.DATE_TIME_YYYY_MM_DD_HH_MM_SS />
        <AntDesign.Column Title="状态" DataIndex="@nameof(context.Status)" TData="NodeStatus">
            @GetItemTag(context)
        </AntDesign.Column>
        <AntDesign.ActionColumn Title="操作">
            @GetItemButtons(context)
        </AntDesign.ActionColumn>
    </Table>
}
@if (_itemShowType == EnumItemShowType.Card)
{
    <Row Gutter=@Gutter>
        @foreach (ServerNodeVM item in DataSource)
        {
            <AntDesign.Col Xs="24" Md="16" Lg="8" @key=@item.Address>
                <Card>
                    <p>地址:@item.Address</p>
                    <p>备注:@item.Remark</p>
                    <p>最后响应时间:@item.LastEchoTime?.ToString(Consts.Format.DATE_TIME_YYYY_MM_DD_HH_MM_SS)</p>
                    @GetItemTag(item)
                    <Divider />
                    @GetItemButtons(item)

                </Card>
            </AntDesign.Col>
        }
    </Row>
}

<EditNode @ref=@_editNode EditType=@EnumEditType.Add OnCompleted=@LoadAllAsync />


@code {
    RenderFragment infoIcon =@<Icon Type="exclamation-circle" Theme="outline" />
    ;

    RenderFragment GetItemButtons(ServerNodeVM node)
        => (RenderFragment)(
    @<Space>
        <SpaceItem><Button Type=@ButtonType.Primary OnClick=@(async e=>await ReloadAllClientAsync(node.Address))>刷新所有客户端的配置</Button></SpaceItem>
        <AuthorizedElement JudgeKey="@JudgeKey.NODE_DELETE">
            <Children>
                <SpaceItem><Button Type=@ButtonType.Primary Danger OnClick=@(e=>DeleteConfirm(node))>删除</Button></SpaceItem>
            </Children>
        </AuthorizedElement>
    </Space>
        );

    RenderFragment GetItemTag(ServerNodeVM node)
    {
        if (node.Status == NodeStatus.Online)
        {
            return (RenderFragment)(
    @<Tag Color="green">在线</Tag>
        );
        }
        else
        {
            return (RenderFragment)(
    @<Tag Color="red-inverse">离线</Tag>
    );
        }
    }


}